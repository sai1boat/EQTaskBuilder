/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eqtaskbuilder;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.util.HashMap;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author sai1boat
 */
public class MainWindow extends javax.swing.JFrame {

    public static Connection con = null;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {

        //Controller.connect();

        initComponents();
        
        /* misc other swing initializations here */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                
                
                jPopupMenu = new JPopupMenu();
                
                JMenuItem menuItemNewTask = new JMenuItem("New Task");
                menuItemNewTask.addActionListener( new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent evt){
                        System.out.println("Event Source: "+evt.getSource().getClass().toString());
                        if(evt.getSource() instanceof JMenuItem){
                            
                            
                            final EQTreeNode selectedNode = (EQTreeNode)jTreeTasks
                                    .getSelectionPath().getLastPathComponent();
                            
                            
                            System.out.println(selectedNode.toString()+" isZone:" +selectedNode.isZone);
                            
                            if(selectedNode.isZone==true){

                                Controller.createNewTask(selectedNode);
                            }
                            else {
                                
                                Controller.createNewTaskFromPrototype(selectedNode);
                                
                            }
                            initTreeModel();
                        }
                    }
                });
                jPopupMenu.add(menuItemNewTask);
                
            }
            
            
        }); //end invoke later

    }
    
    public static void initTreeModel(){
        

        jTreeTasks.setModel(new DefaultTreeModel(Controller.getZoneTaskNodes()));
    }
    
    public void jTreeMouseClicked(MouseEvent evt){
        if (evt.getSource() instanceof JTree) {
            final JTree t = (JTree) evt.getSource();

            final EQTreeNode node = (EQTreeNode) t.getLastSelectedPathComponent();
            
            System.out.println(node.toString()+" isZone:" +node.isZone);
            
            if(SwingUtilities.isLeftMouseButton(evt)){
                if (node.isZone==false) {

                    EventQueue.invokeLater(new Runnable() {

                        @Override
                        public void run() {
                            HashMap hm = node.userHashMap;
                            jSplitPane1.remove(jPanel2);
                            jSplitPane1.setRightComponent(new TaskPanel(hm));
                            jSplitPane1.repaint();
                        }
                    });

                } else {
                    EventQueue.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            jSplitPane1.setRightComponent(jPanel2);
                            jSplitPane1.repaint();
                        }
                    });
                }
            }
            else if(SwingUtilities.isRightMouseButton(evt)){
                System.out.println("Event Source: "+evt.getSource().getClass().toString());
                jPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }

            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTreeTasks = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setMinimumSize(new java.awt.Dimension(200, 200));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel2.setRequestFocusEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Welcome to EQTaskBuilder!\n\nIf this is your first time using this\nprogram, use File>Settings to configure\nyour database connection parameters.\n\nRight click the tree on the left to create\ntasks in a given zone, or you can copy\nan existing task to speed up the process.");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel2);

        jTreeTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTreeTasksMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTreeTasks);

        jSplitPane1.setLeftComponent(jScrollPane4);

        jMenu1.setText("File");

        jMenuItem1.setText("Settings");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new SettingsWindow().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (con != null) {
            try {
                con.close();
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void jTreeTasksMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeTasksMousePressed
        jTreeMouseClicked(evt);
    }//GEN-LAST:event_jTreeTasksMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTree jTreeTasks;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPopupMenu jPopupMenu;

}
